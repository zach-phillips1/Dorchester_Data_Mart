-- 24_mart_dim_vital_type_table_creation.sql (idempotent)
SET ROLE ems_owner;
BEGIN;

-- Create minimal shell if missing
CREATE TABLE IF NOT EXISTS mart.dim_vital_type (
  vital_type_key   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  vital_type_code  TEXT UNIQUE NOT NULL
);

-- Ensure all expected columns exist (safe to re-run)
ALTER TABLE mart.dim_vital_type
  ADD COLUMN IF NOT EXISTS display_name   TEXT,
  ADD COLUMN IF NOT EXISTS nemsis_element TEXT,
  ADD COLUMN IF NOT EXISTS is_pain_score  BOOLEAN DEFAULT FALSE,
  ADD COLUMN IF NOT EXISTS is_numeric     BOOLEAN,
  ADD COLUMN IF NOT EXISTS scale_family   TEXT,
  ADD COLUMN IF NOT EXISTS notes          TEXT;

-- Add the constraint only if it doesn't already exist
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM pg_constraint
    WHERE conname = 'dim_vital_type_scale_family_chk'
      AND conrelid = 'mart.dim_vital_type'::regclass
  ) THEN
    ALTER TABLE mart.dim_vital_type
      ADD CONSTRAINT dim_vital_type_scale_family_chk
      CHECK (scale_family IS NULL OR scale_family IN ('numeric','faces','ordinal','text'));
  END IF;
END$$;

-- Comments (okay to run repeatedly)
COMMENT ON TABLE  mart.dim_vital_type IS 'Lookup of vital measurement types (normalized from NEMSIS eVitals).';
COMMENT ON COLUMN mart.dim_vital_type.vital_type_code  IS 'Stable code used by ETL (snake_case); unique natural key.';
COMMENT ON COLUMN mart.dim_vital_type.display_name     IS 'Human-friendly label for reporting.';
COMMENT ON COLUMN mart.dim_vital_type.nemsis_element   IS 'Source NEMSIS element (e.g., eVitals.27).';
COMMENT ON COLUMN mart.dim_vital_type.is_pain_score    IS 'TRUE when this type represents a pain score reading.';
COMMENT ON COLUMN mart.dim_vital_type.is_numeric       IS 'TRUE when value_numeric normally applies for this type.';
COMMENT ON COLUMN mart.dim_vital_type.scale_family     IS 'Value interpretation: numeric/faces/ordinal/text.';

COMMIT;
RESET ROLE;
